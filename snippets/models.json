{
  "User model": {
    "prefix": "a-models-user-pplm",
    "body": [
      "const mongoose = require('mongoose');",
      "const passportLocalMongoose = require('passport-local-mongoose');",
      "",
      "const UserSchema = new mongoose.Schema({",
      "  username: {type: String, required: true, unique: true},",
      "  email: {type: String, required: true, unique: true},",
      "  age: {type: Number, required: true }",
      "}, {timestamps: true});",
      "",
      "// Plugin passport-local-mongoose to handle password hashing and user authentication",
      "UserSchema.plugin(passportLocalMongoose);",
      "",
      "const UserModel = mongoose.model('user', UserSchema);",
      "module.exports = UserModel;"
    ],
    "description": "User model"
  },
  "schemaMongoose": {
        "prefix": "a-models-schema",
        "body": [
            "import mongoose from 'mongoose';",
            "",
            "const ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}Schema = mongoose.Schema(",
            "  {",
            "    content: {},",
            "  },",
            "  {",
            "    timestamps: true,",
            "  }",
            ");",
            "",
            "export default mongoose.model('${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}', ${1:${TM_FILENAME_BASE/(.*)$/${1:/capitalize}/}}Schema);",
            ""
        ],
        "description": "Create schema mongoose"
    },
    "a bunch of models": {
    "prefix": "a-models-many",
    "body": [
        "// blog_app/models/article.js",
        "import mongoose from \"mongoose\";",
        "",
        "const ArticleSchema = new mongoose.Schema({",
        "  title: {",
        "    type: String,",
        "    required: true,",
        "  },",
        "  content: {",
        "    type: String,",
        "  },",
        "  date: { type: Date, default: Date.now },",
        "});",
        "",
        "const ArticleModel = mongoose.model(\"Article\", ArticleSchema);",
        "export default ArticleModel;",
        "",
        "import mongoose from \"mongoose\";",
        "import CourseModel from \"./CourseModel.js\";",
        "",
        "const CategorySchema = new mongoose.Schema({",
        "  id: {",
        "    type: Number    ",
        "  },",
        "  name: {",
        "    type: String,",
        "  },",
        "  courses: [{",
        "    type: mongoose.Schema.Types.ObjectId,",
        "    ref: \"Course\"",
        " }]",
        " ",
        "});",
        "",
        "const CategoryModel = mongoose.model(\"Category\", CategorySchema);",
        "export default CategoryModel;",
        "",
        "import mongoose from \"mongoose\";",
        "import QuestionModel from \"./QuestionModel.js\";",
        "",
        "const CourseSchema = new mongoose.Schema({",
        "  cid: {",
        "    type: Number,",
        "    required: true",
        "  },",
        "  courseName: {",
        "    type: String,",
        "    required: true",
        "  },",
        "  questions: [{ ",
        "    type: mongoose.Schema.Types.ObjectId,",
        "    ref: \"Question\"",
        " }]",
        " ",
        "});",
        "",
        "const CourseModel = mongoose.model(\"Course\", CourseSchema);",
        "export default CourseModel;",
        "",
        "import mongoose, { Schema } from \"mongoose\";",
        "",
        "const QuestionSchema = new mongoose.Schema({",
        "  qid: {",
        "    type: Number,",
        "    required: true",
        "  },",
        "  question: {",
        "    type: String,",
        "    required: true",
        "  },",
        "  answers: {",
        "    type: Schema.Types.Mixed",
        "  }",
        "});",
        "",
        "const QuestionModel = mongoose.model(\"Question\", QuestionSchema);",
        "export default QuestionModel;"
    ],
    "description": "a bunch of models"
}
}